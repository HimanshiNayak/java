

import java.util.*;
interface A{
    int x =20;
    String greet = "Hello";
    int square(int n);
    void display();
}
interface D extends A{
    int cube(int d);
    void show();
}
class B implements A{

    @Override
    public int square( int m) {
       return m*m; // wontprint anything
    }

    @Override
    public void display() {
        System.out.println("Done");
    }

}
class E implements D{

    @Override
    public int square(int n) {
        return n*n;
    }

    @Override
    public void display() {
       System.out.println("Done !!!");
    }

    @Override
    public int cube(int d) {
       return d*d*d;
    }

    @Override
    public void show() {
        System.out.println("done with inheritance in interface");
    }

}
public class interfaces {
    public static void main(String[] args) {
        B b = new B();
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter a number to get square: ");
int num = sc.nextInt();
int c = b.square(num);
System.out.println("the value returned by the square function is:"+c);
b.display();
E e = new E();
Scanner sac = new Scanner(System.in);
System.out.println("Enter a number to get cube: ");
int n= sac.nextInt();
int t = e.cube(n);
e.show();
    }
}
